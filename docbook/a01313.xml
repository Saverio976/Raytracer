<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_a01313" xml:lang="en-US">
<title>RayTracer::Entities::IPrimitive Class Reference</title>
<indexterm><primary>RayTracer::Entities::IPrimitive</primary></indexterm>
<para>

<para>The <link linkend="_a01313">IPrimitive</link> class. </para>
 
</para>
<para>
<computeroutput>#include &lt;IPrimitive.hpp&gt;</computeroutput>
</para>
Inheritance diagram for RayTracer::Entities::IPrimitive:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="a01312.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for RayTracer::Entities::IPrimitive:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="a01311.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual <link linkend="_a01313_1a5009cf025d179924d9c3c5bda7b0dad5">~IPrimitive</link> ()=default</para>
</listitem>
            <listitem><para>virtual <link linkend="_a01369">Images::Color</link> <link linkend="_a01313_1a6c9c38a268043a21e98bd42661125e2e">getColor</link> (const <link linkend="_a01397">Images::Ray</link> &amp;ray, const <link linkend="_a01505">Scenes::IDisplayable</link> &amp;displayable, const <link linkend="_a01329">Transform::Vector3f</link> &amp;intersect) const =0</para>

<para>Get the material. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_a01313_1a59076ea4dbff9d3617643678cb6bb266">isCollided</link> (const <link linkend="_a01329">Transform::Vector3f</link> &amp;point) const =0</para>

<para>Check if the point is collided with the box. </para>
</listitem>
            <listitem><para>virtual std::optional&lt; <link linkend="_a01329">Transform::Vector3f</link> &gt; <link linkend="_a01313_1aff9a474acf22c4d04959f8e8aaa5cac9">isCollided</link> (const <link linkend="_a01397">Images::Ray</link> &amp;ray) const =0</para>

<para>Check if the ray is collided. </para>
</listitem>
            <listitem><para>virtual <link linkend="_a01369">Images::Color</link> <link linkend="_a01313_1ae6a0b892920f7ea034475d7777ed5cf2">redirectionLight</link> (const <link linkend="_a01397">Images::Ray</link> &amp;ray, const <link linkend="_a01505">Scenes::IDisplayable</link> &amp;displayable, const <link linkend="_a01329">Transform::Vector3f</link> &amp;intersect) const =0</para>

<para>this function is called when the object intercept the ray light </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The <link linkend="_a01313">IPrimitive</link> class. </para>



<para>class that represent a primitive (box, sphere, ...) </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_a01313_1a5009cf025d179924d9c3c5bda7b0dad5"/>    <section>
    <title>~IPrimitive()</title>
<indexterm><primary>~IPrimitive</primary><secondary>RayTracer::Entities::IPrimitive</secondary></indexterm>
<indexterm><primary>RayTracer::Entities::IPrimitive</primary><secondary>~IPrimitive</secondary></indexterm>
<para><computeroutput>virtual RayTracer::Entities::IPrimitive::~IPrimitive ( )<computeroutput>[virtual]</computeroutput>, <computeroutput>[default]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_a01313_1a6c9c38a268043a21e98bd42661125e2e"/>    <section>
    <title>getColor()</title>
<indexterm><primary>getColor</primary><secondary>RayTracer::Entities::IPrimitive</secondary></indexterm>
<indexterm><primary>RayTracer::Entities::IPrimitive</primary><secondary>getColor</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_a01369">Images::Color</link> RayTracer::Entities::IPrimitive::getColor (const <link linkend="_a01397">Images::Ray</link> &amp; ray, const <link linkend="_a01505">Scenes::IDisplayable</link> &amp; displayable, const <link linkend="_a01329">Transform::Vector3f</link> &amp; intersect) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Get the material. </para>
</para>

<para><formalpara><title>Returns</title>

<para>the material </para>
</formalpara>
</para>
<para>
Implemented in <link linkend="_a01753_1a354290e7edc235e89e1721369a61f969">RayTracer::PluginsExt::Triangle::TriangleEntity</link>, <link linkend="_a01737_1a1c638d1dc19ba31ee74a6163f930e55b">RayTracer::PluginsExt::Torus::TorusEntity</link>, <link linkend="_a01721_1a20b848feb094a38fcac57aec91621f09">RayTracer::PluginsExt::Sphere::SphereEntity</link>, <link linkend="_a01697_1a0433d68952f748f2843dde8cbf2577e0">RayTracer::PluginsExt::Plane::PlaneEntity</link>, <link linkend="_a01673_1a3546e3601c4049482bfbd09f527c2e3c">RayTracer::PluginsExt::LimitedPlane::LimitedPlaneEntity</link>, <link linkend="_a01665_1a3716afd545fc1b1404bd9aacc0b7886b">RayTracer::PluginsExt::LimitedCylinder::LimitedCylinderEntity</link>, <link linkend="_a01657_1a066e2b9f5ff575674a5912fb325b2eb3">RayTracer::PluginsExt::LimitedCone::LimitedConeEntity</link>, <link linkend="_a01649_1a698890b64e104f0cca8ba376af1e10ae">RayTracer::PluginsExt::Disk::DiskEntity</link>, <link linkend="_a01641_1a1e2f982e32eab069d73244b4396da0c3">RayTracer::PluginsExt::Cylinder::CylinderEntity</link>, and <link linkend="_a01633_1a7570e1f30ec2c1612ef17160b5c0b379">RayTracer::PluginsExt::Cone::ConeEntity</link>.</para>
    </section><anchor xml:id="_a01313_1aff9a474acf22c4d04959f8e8aaa5cac9"/>    <section>
    <title>isCollided()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>isCollided</primary><secondary>RayTracer::Entities::IPrimitive</secondary></indexterm>
<indexterm><primary>RayTracer::Entities::IPrimitive</primary><secondary>isCollided</secondary></indexterm>
<para><computeroutput>virtual std::optional&lt;<link linkend="_a01329">Transform::Vector3f</link>&gt; RayTracer::Entities::IPrimitive::isCollided (const <link linkend="_a01397">Images::Ray</link> &amp; ray) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Check if the ray is collided. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>ray</entry>
                                <entry>
<para>the ray</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>true if the ray is collided </para>
</formalpara>
</para>
<para>
Implemented in <link linkend="_a01753_1a787b08e6a6097411001e7859ab574776">RayTracer::PluginsExt::Triangle::TriangleEntity</link>, <link linkend="_a01737_1aec6ff78cfa64e53a20ad1e6e7f01377f">RayTracer::PluginsExt::Torus::TorusEntity</link>, <link linkend="_a01721_1ad9fa68e2ac7014bccf47ae16dd3b4cbf">RayTracer::PluginsExt::Sphere::SphereEntity</link>, <link linkend="_a01697_1a698ea9b48fec382e2bf78e97d20e9d82">RayTracer::PluginsExt::Plane::PlaneEntity</link>, <link linkend="_a01673_1a33f6bbb623c4dfa345e4274bf57ff3c5">RayTracer::PluginsExt::LimitedPlane::LimitedPlaneEntity</link>, <link linkend="_a01665_1a9778a86d3f8c0c621150c9aa5baaf4b3">RayTracer::PluginsExt::LimitedCylinder::LimitedCylinderEntity</link>, <link linkend="_a01657_1a8983c50780528588e7fe9ffcdab9e518">RayTracer::PluginsExt::LimitedCone::LimitedConeEntity</link>, <link linkend="_a01649_1a77e2d9e1a3b868529076a985ae02c06f">RayTracer::PluginsExt::Disk::DiskEntity</link>, <link linkend="_a01641_1a32392c92d43a0127e985870d474ccd07">RayTracer::PluginsExt::Cylinder::CylinderEntity</link>, and <link linkend="_a01633_1a1305d64413121ac59b59ac2ad323a3c9">RayTracer::PluginsExt::Cone::ConeEntity</link>.</para>
    </section><anchor xml:id="_a01313_1a59076ea4dbff9d3617643678cb6bb266"/>    <section>
    <title>isCollided()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>isCollided</primary><secondary>RayTracer::Entities::IPrimitive</secondary></indexterm>
<indexterm><primary>RayTracer::Entities::IPrimitive</primary><secondary>isCollided</secondary></indexterm>
<para><computeroutput>virtual bool RayTracer::Entities::IPrimitive::isCollided (const <link linkend="_a01329">Transform::Vector3f</link> &amp; point) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Check if the point is collided with the box. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>point</entry>
                                <entry>
<para>the point</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>true if the point is collided </para>
</formalpara>
</para>
<para>
Implemented in <link linkend="_a01753_1ae28cf8d2a9967048feaf391ca5544e7b">RayTracer::PluginsExt::Triangle::TriangleEntity</link>, <link linkend="_a01737_1a0adef1ca978af410d732816f8f960a5e">RayTracer::PluginsExt::Torus::TorusEntity</link>, <link linkend="_a01721_1af7a662faf2a05329d53bcf09f24eb7d7">RayTracer::PluginsExt::Sphere::SphereEntity</link>, <link linkend="_a01697_1a27df9e661d59ff6d527937494812d2bb">RayTracer::PluginsExt::Plane::PlaneEntity</link>, <link linkend="_a01673_1a4c74e9ca262ea3ade79a0cf7fbe1b2f6">RayTracer::PluginsExt::LimitedPlane::LimitedPlaneEntity</link>, <link linkend="_a01665_1a30a4ef16e1772996d3a050db946710cd">RayTracer::PluginsExt::LimitedCylinder::LimitedCylinderEntity</link>, <link linkend="_a01657_1a906cb6e999ad79fd4a9830cf12f14ef4">RayTracer::PluginsExt::LimitedCone::LimitedConeEntity</link>, <link linkend="_a01649_1a78c7ecb9c89d5263736e3a7eeae17561">RayTracer::PluginsExt::Disk::DiskEntity</link>, <link linkend="_a01641_1a18f8f5c0986e53fd4a585019ffc622de">RayTracer::PluginsExt::Cylinder::CylinderEntity</link>, and <link linkend="_a01633_1a3dd6e9f5271d10406b0992fa5ae748d0">RayTracer::PluginsExt::Cone::ConeEntity</link>.</para>
    </section><anchor xml:id="_a01313_1ae6a0b892920f7ea034475d7777ed5cf2"/>    <section>
    <title>redirectionLight()</title>
<indexterm><primary>redirectionLight</primary><secondary>RayTracer::Entities::IPrimitive</secondary></indexterm>
<indexterm><primary>RayTracer::Entities::IPrimitive</primary><secondary>redirectionLight</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_a01369">Images::Color</link> RayTracer::Entities::IPrimitive::redirectionLight (const <link linkend="_a01397">Images::Ray</link> &amp; ray, const <link linkend="_a01505">Scenes::IDisplayable</link> &amp; displayable, const <link linkend="_a01329">Transform::Vector3f</link> &amp; intersect) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>this function is called when the object intercept the ray light </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>ray</entry>
                                <entry>
<para>the ray between the light and the object </para>
</entry>
                            </row>
                            <row>
                                <entry>displayable</entry>
                                <entry>
<para>the displayable </para>
</entry>
                            </row>
                            <row>
                                <entry>intersect</entry>
                                <entry>
<para>the intersection point between this point and the ray</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>the color of the shadow </para>
</formalpara>
</para>
<para>
Implemented in <link linkend="_a01753_1a31d556941485aa5085311e9d51f98cac">RayTracer::PluginsExt::Triangle::TriangleEntity</link>, <link linkend="_a01737_1a585f10646453c1aeedf6dd7ee542f5f7">RayTracer::PluginsExt::Torus::TorusEntity</link>, <link linkend="_a01721_1a6527a5980f0edb5ba197969a866e3dde">RayTracer::PluginsExt::Sphere::SphereEntity</link>, <link linkend="_a01697_1add3ca9469f0a1cba03e6f3f25c3dee96">RayTracer::PluginsExt::Plane::PlaneEntity</link>, <link linkend="_a01673_1a08d157c6503dda48857ee3b957e9a3dc">RayTracer::PluginsExt::LimitedPlane::LimitedPlaneEntity</link>, <link linkend="_a01665_1a3137763185516be70f4ebd9ebf956c5c">RayTracer::PluginsExt::LimitedCylinder::LimitedCylinderEntity</link>, <link linkend="_a01657_1a4141037f0c635e1de7cd5a82765e3524">RayTracer::PluginsExt::LimitedCone::LimitedConeEntity</link>, <link linkend="_a01649_1a5a5ecae9fd45f5c3c2e6bce2d970a4f4">RayTracer::PluginsExt::Disk::DiskEntity</link>, <link linkend="_a01641_1a889a516992ddcf51e35fdc0c97f85101">RayTracer::PluginsExt::Cylinder::CylinderEntity</link>, and <link linkend="_a01633_1ad57041a74a712b97f378436b0e67bb72">RayTracer::PluginsExt::Cone::ConeEntity</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
/home/runner/work/Raytracer/Raytracer/src/Entities/<link linkend="_a00113">IPrimitive.hpp</link></section>
</section>
