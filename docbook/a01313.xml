<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_a01313" xml:lang="en-US">
<title>RayTracer::Parameters Class Reference</title>
<indexterm><primary>RayTracer::Parameters</primary></indexterm>
<para>

<para>The <link linkend="_a01313">Parameters</link> class singleton. </para>
 
</para>
<para>
<computeroutput>#include &lt;Parameters.hpp&gt;</computeroutput>
</para>
Collaboration diagram for RayTracer::Parameters:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="a01311.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_a01317">KeyNotFoundError</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_a01313_1a8875b510b3ba6871ce7859af91fe1a7a">~Parameters</link> ()=default</para>
</listitem>
            <listitem><para><link linkend="_a01313_1a1e61b4682274c9a0d656cb09643a5ce4">Parameters</link> (const <link linkend="_a01313">Parameters</link> &amp;other)=delete</para>
</listitem>
            <listitem><para>void <link linkend="_a01313_1a8dfa78ab889a609549609222b83f1d5c">parseCmdArgs</link> (int argc, char **argv)</para>

<para>Parse the command line arguments. </para>
</listitem>
            <listitem><para>const int <link linkend="_a01313_1a309f7af8206eaac51f4e312bb33b71de">getInt</link> (const std::string &amp;key) const</para>

<para>Get config key value as int. </para>
</listitem>
            <listitem><para>const double <link linkend="_a01313_1ae4a50ba7d398f69905f0014abe7ae036">getDouble</link> (const std::string &amp;key) const</para>

<para>Get config key value as double. </para>
</listitem>
            <listitem><para>const std::string &amp; <link linkend="_a01313_1a330edb7760d0e3b8e29f663dd2c8ed12">getString</link> (const std::string &amp;key) const</para>

<para>Get config key value as string. </para>
</listitem>
            <listitem><para>void <link linkend="_a01313_1af71b448b848ee5648ff501d424250a2e">set</link> (const std::string &amp;key, int value)</para>

<para>Set config key value as int. </para>
</listitem>
            <listitem><para>void <link linkend="_a01313_1ae1d4156c969ddbda88c6ceec057d8a0c">set</link> (const std::string &amp;key, double value)</para>

<para>Set config key value as double. </para>
</listitem>
            <listitem><para>void <link linkend="_a01313_1a99f2afa2b97715927fc74827cbdf4201">set</link> (const std::string &amp;key, const std::string &amp;value)</para>

<para>Set config key value as string. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_a01313">Parameters</link> &amp; <link linkend="_a01313_1a6927a0964561be2f5dc05df26aad61cf">getInstance</link> ()</para>

<para>Get the singleton instance. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_a01313_1a2dd4efe286ed42509f9492d4a53639fb">Parameters</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_a01313_1a920a20e5234f2dfc60a44b3ddf1725bf">parseCmdArg</link> (const std::string &amp;key, const std::string &amp;value)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>std::map&lt; std::string, int &gt; <link linkend="_a01313_1a45e36a5d45a19ce405b86f74f951775f">_valuesInt</link></para>
</listitem>
            <listitem><para>std::map&lt; std::string, double &gt; <link linkend="_a01313_1aadda3af4e0519ab49c3bbeb317e5281c">_valuesDouble</link></para>
</listitem>
            <listitem><para>std::map&lt; std::string, std::string &gt; <link linkend="_a01313_1ac66bf156ae9cab4f4988ca623fd00090">_valuesString</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>static std::unique_ptr&lt; <link linkend="_a01313">Parameters</link> &gt; <link linkend="_a01313_1ac4f9faa3618ad1219f007bd280a83672">_parameters</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The <link linkend="_a01313">Parameters</link> class singleton. </para>



<para>(like a global config :eyes:) </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_a01313_1a8875b510b3ba6871ce7859af91fe1a7a"/>    <section>
    <title>~Parameters()</title>
<indexterm><primary>~Parameters</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>~Parameters</secondary></indexterm>
<para><computeroutput>RayTracer::Parameters::~Parameters ( )<computeroutput>[default]</computeroutput></computeroutput></para>    </section><anchor xml:id="_a01313_1a1e61b4682274c9a0d656cb09643a5ce4"/>    <section>
    <title>Parameters()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Parameters</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>Parameters</secondary></indexterm>
<para><computeroutput>RayTracer::Parameters::Parameters (const <link linkend="_a01313">Parameters</link> &amp; other)<computeroutput>[delete]</computeroutput></computeroutput></para>    </section><anchor xml:id="_a01313_1a2dd4efe286ed42509f9492d4a53639fb"/>    <section>
    <title>Parameters()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Parameters</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>Parameters</secondary></indexterm>
<para><computeroutput>RayTracer::Parameters::Parameters ( )<computeroutput>[protected]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_a01313_1ae4a50ba7d398f69905f0014abe7ae036"/>    <section>
    <title>getDouble()</title>
<indexterm><primary>getDouble</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>getDouble</secondary></indexterm>
<para><computeroutput>const double RayTracer::Parameters::getDouble (const std::string &amp; key) const</computeroutput></para><para>

<para>Get config key value as double. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>key</entry>
                                <entry>
<para>the key</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>the double </para>
</formalpara>
</para>
    </section><anchor xml:id="_a01313_1a6927a0964561be2f5dc05df26aad61cf"/>    <section>
    <title>getInstance()</title>
<indexterm><primary>getInstance</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>getInstance</secondary></indexterm>
<para><computeroutput>static <link linkend="_a01313">Parameters</link>&amp; RayTracer::Parameters::getInstance ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Get the singleton instance. </para>
</para>

<para><formalpara><title>Returns</title>

<para>the parameters </para>
</formalpara>
</para>
    </section><anchor xml:id="_a01313_1a309f7af8206eaac51f4e312bb33b71de"/>    <section>
    <title>getInt()</title>
<indexterm><primary>getInt</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>getInt</secondary></indexterm>
<para><computeroutput>const int RayTracer::Parameters::getInt (const std::string &amp; key) const</computeroutput></para><para>

<para>Get config key value as int. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>key</entry>
                                <entry>
<para>the key</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>the int </para>
</formalpara>
</para>
    </section><anchor xml:id="_a01313_1a330edb7760d0e3b8e29f663dd2c8ed12"/>    <section>
    <title>getString()</title>
<indexterm><primary>getString</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>getString</secondary></indexterm>
<para><computeroutput>const std::string&amp; RayTracer::Parameters::getString (const std::string &amp; key) const</computeroutput></para><para>

<para>Get config key value as string. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>key</entry>
                                <entry>
<para>the key</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>the string </para>
</formalpara>
</para>
    </section><anchor xml:id="_a01313_1a920a20e5234f2dfc60a44b3ddf1725bf"/>    <section>
    <title>parseCmdArg()</title>
<indexterm><primary>parseCmdArg</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>parseCmdArg</secondary></indexterm>
<para><computeroutput>void RayTracer::Parameters::parseCmdArg (const std::string &amp; key, const std::string &amp; value)<computeroutput>[protected]</computeroutput></computeroutput></para>    </section><anchor xml:id="_a01313_1a8dfa78ab889a609549609222b83f1d5c"/>    <section>
    <title>parseCmdArgs()</title>
<indexterm><primary>parseCmdArgs</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>parseCmdArgs</secondary></indexterm>
<para><computeroutput>void RayTracer::Parameters::parseCmdArgs (int argc, char ** argv)</computeroutput></para><para>

<para>Parse the command line arguments. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>argc</entry>
                                <entry>
<para>the number of arguments </para>
</entry>
                            </row>
                            <row>
                                <entry>argv</entry>
                                <entry>
<para>the arguments </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_a01313_1a99f2afa2b97715927fc74827cbdf4201"/>    <section>
    <title>set()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>set</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>set</secondary></indexterm>
<para><computeroutput>void RayTracer::Parameters::set (const std::string &amp; key, const std::string &amp; value)</computeroutput></para><para>

<para>Set config key value as string. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>key</entry>
                                <entry>
<para>the key </para>
</entry>
                            </row>
                            <row>
                                <entry>value</entry>
                                <entry>
<para>the value </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_a01313_1ae1d4156c969ddbda88c6ceec057d8a0c"/>    <section>
    <title>set()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>set</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>set</secondary></indexterm>
<para><computeroutput>void RayTracer::Parameters::set (const std::string &amp; key, double value)</computeroutput></para><para>

<para>Set config key value as double. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>key</entry>
                                <entry>
<para>the key </para>
</entry>
                            </row>
                            <row>
                                <entry>value</entry>
                                <entry>
<para>the value </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_a01313_1af71b448b848ee5648ff501d424250a2e"/>    <section>
    <title>set()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>set</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>set</secondary></indexterm>
<para><computeroutput>void RayTracer::Parameters::set (const std::string &amp; key, int value)</computeroutput></para><para>

<para>Set config key value as int. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>key</entry>
                                <entry>
<para>the key </para>
</entry>
                            </row>
                            <row>
                                <entry>value</entry>
                                <entry>
<para>the value </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_a01313_1ac4f9faa3618ad1219f007bd280a83672"/>    <section>
    <title>_parameters</title>
<indexterm><primary>_parameters</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>_parameters</secondary></indexterm>
<para><computeroutput>std::unique_ptr&lt;<link linkend="_a01313">Parameters</link>&gt; RayTracer::Parameters::_parameters<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>    </section><anchor xml:id="_a01313_1aadda3af4e0519ab49c3bbeb317e5281c"/>    <section>
    <title>_valuesDouble</title>
<indexterm><primary>_valuesDouble</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>_valuesDouble</secondary></indexterm>
<para><computeroutput>std::map&lt;std::string, double&gt; RayTracer::Parameters::_valuesDouble<computeroutput>[protected]</computeroutput></computeroutput></para>    </section><anchor xml:id="_a01313_1a45e36a5d45a19ce405b86f74f951775f"/>    <section>
    <title>_valuesInt</title>
<indexterm><primary>_valuesInt</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>_valuesInt</secondary></indexterm>
<para><computeroutput>std::map&lt;std::string, int&gt; RayTracer::Parameters::_valuesInt<computeroutput>[protected]</computeroutput></computeroutput></para>    </section><anchor xml:id="_a01313_1ac66bf156ae9cab4f4988ca623fd00090"/>    <section>
    <title>_valuesString</title>
<indexterm><primary>_valuesString</primary><secondary>RayTracer::Parameters</secondary></indexterm>
<indexterm><primary>RayTracer::Parameters</primary><secondary>_valuesString</secondary></indexterm>
<para><computeroutput>std::map&lt;std::string, std::string&gt; RayTracer::Parameters::_valuesString<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
/home/runner/work/Raytracer/Raytracer/src/<link linkend="_a00149">Parameters.hpp</link></section>
</section>
