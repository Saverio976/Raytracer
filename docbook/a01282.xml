<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_a01282" xml:lang="en-US">
<title>RayTracer::Entities::Transform::ITransform Class Reference</title>
<indexterm><primary>RayTracer::Entities::Transform::ITransform</primary></indexterm>
<para>

<para>The <link linkend="_a01282">ITransform</link> class. </para>
 
</para>
<para>
<computeroutput>#include &lt;ITransform.hpp&gt;</computeroutput>
</para>
Inheritance diagram for RayTracer::Entities::Transform::ITransform:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="a01281.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for RayTracer::Entities::Transform::ITransform:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="a01280.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual <link linkend="_a01282_1ab2d5d22605b9951ec76ee25126633db0">~ITransform</link> ()=default</para>
</listitem>
            <listitem><para>virtual void <link linkend="_a01282_1a88e2865250cd190041916bb6b9d715b3">setPosition</link> (const <link linkend="_a01294">Vector3f</link> &amp;position)=0</para>

<para>Set the position. </para>
</listitem>
            <listitem><para>virtual const <link linkend="_a01294">Vector3f</link> &amp; <link linkend="_a01282_1aff7fda973737a55306e1900439f3d6f6">getPosition</link> () const =0</para>

<para>Get the position. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_a01282_1a686b40a3b17310304bb9d532e8550b9b">setRotation</link> (const <link linkend="_a01294">Vector3f</link> &amp;rotation)=0</para>

<para>Set the rotation. </para>
</listitem>
            <listitem><para>virtual const <link linkend="_a01294">Vector3f</link> &amp; <link linkend="_a01282_1a57854e8e4ac74ab0ed827704ff81436f">getRotation</link> () const =0</para>

<para>Get the rotation. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_a01282_1ae1099e652ff4659b04028f0d65c8d56b">setScale</link> (const <link linkend="_a01294">Vector3f</link> &amp;scale)=0</para>

<para>Set the scale. </para>
</listitem>
            <listitem><para>virtual const <link linkend="_a01294">Vector3f</link> &amp; <link linkend="_a01282_1a50da7841f811b84d0fbf4fad492a8451">getScale</link> () const =0</para>

<para>Get the scale. </para>
</listitem>
            <listitem><para>virtual <link linkend="_a01282">ITransform</link> &amp; <link linkend="_a01282_1abc6e2b741bd58849b10d4523d06ce389">operator=</link> (const <link linkend="_a01282">ITransform</link> &amp;other)=0</para>

<para>Assign a transform. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The <link linkend="_a01282">ITransform</link> class. </para>



<para>class that represent a transform (position, rotation, scale, ..) of an <computeroutput><link linkend="_a01266">IEntity</link></computeroutput> </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_a01282_1ab2d5d22605b9951ec76ee25126633db0"/>    <section>
    <title>~ITransform()</title>
<indexterm><primary>~ITransform</primary><secondary>RayTracer::Entities::Transform::ITransform</secondary></indexterm>
<indexterm><primary>RayTracer::Entities::Transform::ITransform</primary><secondary>~ITransform</secondary></indexterm>
<para><computeroutput>virtual RayTracer::Entities::Transform::ITransform::~ITransform ( )<computeroutput>[virtual]</computeroutput>, <computeroutput>[default]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_a01282_1aff7fda973737a55306e1900439f3d6f6"/>    <section>
    <title>getPosition()</title>
<indexterm><primary>getPosition</primary><secondary>RayTracer::Entities::Transform::ITransform</secondary></indexterm>
<indexterm><primary>RayTracer::Entities::Transform::ITransform</primary><secondary>getPosition</secondary></indexterm>
<para><computeroutput>virtual const <link linkend="_a01294">Vector3f</link>&amp; RayTracer::Entities::Transform::ITransform::getPosition ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Get the position. </para>
</para>

<para><formalpara><title>Returns</title>

<para>the position </para>
</formalpara>
</para>
<para>
Implemented in <link linkend="_a01286_1a3c5fdb6d163271e3232f0a7a51824163">RayTracer::Entities::Transform::Transform</link>.</para>
    </section><anchor xml:id="_a01282_1a57854e8e4ac74ab0ed827704ff81436f"/>    <section>
    <title>getRotation()</title>
<indexterm><primary>getRotation</primary><secondary>RayTracer::Entities::Transform::ITransform</secondary></indexterm>
<indexterm><primary>RayTracer::Entities::Transform::ITransform</primary><secondary>getRotation</secondary></indexterm>
<para><computeroutput>virtual const <link linkend="_a01294">Vector3f</link>&amp; RayTracer::Entities::Transform::ITransform::getRotation ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Get the rotation. </para>
</para>

<para><formalpara><title>Returns</title>

<para>the rotation </para>
</formalpara>
</para>
<para>
Implemented in <link linkend="_a01286_1a25e2017dfd044d7205976bacf4eb0b09">RayTracer::Entities::Transform::Transform</link>.</para>
    </section><anchor xml:id="_a01282_1a50da7841f811b84d0fbf4fad492a8451"/>    <section>
    <title>getScale()</title>
<indexterm><primary>getScale</primary><secondary>RayTracer::Entities::Transform::ITransform</secondary></indexterm>
<indexterm><primary>RayTracer::Entities::Transform::ITransform</primary><secondary>getScale</secondary></indexterm>
<para><computeroutput>virtual const <link linkend="_a01294">Vector3f</link>&amp; RayTracer::Entities::Transform::ITransform::getScale ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Get the scale. </para>
</para>

<para><formalpara><title>Returns</title>

<para>the scale </para>
</formalpara>
</para>
<para>
Implemented in <link linkend="_a01286_1a70978d92572e87b2ff81a5ac95426445">RayTracer::Entities::Transform::Transform</link>.</para>
    </section><anchor xml:id="_a01282_1abc6e2b741bd58849b10d4523d06ce389"/>    <section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>RayTracer::Entities::Transform::ITransform</secondary></indexterm>
<indexterm><primary>RayTracer::Entities::Transform::ITransform</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_a01282">ITransform</link>&amp; RayTracer::Entities::Transform::ITransform::operator= (const <link linkend="_a01282">ITransform</link> &amp; other)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Assign a transform. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>other</entry>
                                <entry>
<para>the other transform</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>the same transform modified </para>
</formalpara>
</para>
<para>
Implemented in <link linkend="_a01286_1ae7ef02b44892a6283eec4951ca260dea">RayTracer::Entities::Transform::Transform</link>.</para>
    </section><anchor xml:id="_a01282_1a88e2865250cd190041916bb6b9d715b3"/>    <section>
    <title>setPosition()</title>
<indexterm><primary>setPosition</primary><secondary>RayTracer::Entities::Transform::ITransform</secondary></indexterm>
<indexterm><primary>RayTracer::Entities::Transform::ITransform</primary><secondary>setPosition</secondary></indexterm>
<para><computeroutput>virtual void RayTracer::Entities::Transform::ITransform::setPosition (const <link linkend="_a01294">Vector3f</link> &amp; position)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Set the position. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>position</entry>
                                <entry>
<para>the position </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implemented in <link linkend="_a01286_1ade32510a678f237b521ee9b42a7ea73e">RayTracer::Entities::Transform::Transform</link>.</para>
    </section><anchor xml:id="_a01282_1a686b40a3b17310304bb9d532e8550b9b"/>    <section>
    <title>setRotation()</title>
<indexterm><primary>setRotation</primary><secondary>RayTracer::Entities::Transform::ITransform</secondary></indexterm>
<indexterm><primary>RayTracer::Entities::Transform::ITransform</primary><secondary>setRotation</secondary></indexterm>
<para><computeroutput>virtual void RayTracer::Entities::Transform::ITransform::setRotation (const <link linkend="_a01294">Vector3f</link> &amp; rotation)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Set the rotation. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>rotation</entry>
                                <entry>
<para>the rotation </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implemented in <link linkend="_a01286_1ae3338957810bc8365dd2f37f636f060e">RayTracer::Entities::Transform::Transform</link>.</para>
    </section><anchor xml:id="_a01282_1ae1099e652ff4659b04028f0d65c8d56b"/>    <section>
    <title>setScale()</title>
<indexterm><primary>setScale</primary><secondary>RayTracer::Entities::Transform::ITransform</secondary></indexterm>
<indexterm><primary>RayTracer::Entities::Transform::ITransform</primary><secondary>setScale</secondary></indexterm>
<para><computeroutput>virtual void RayTracer::Entities::Transform::ITransform::setScale (const <link linkend="_a01294">Vector3f</link> &amp; scale)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Set the scale. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>scale</entry>
                                <entry>
<para>the scale </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implemented in <link linkend="_a01286_1a02dfec630cff151c363ef48df529d652">RayTracer::Entities::Transform::Transform</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
/home/runner/work/Raytracer/Raytracer/src/Entities/Transform/<link linkend="_a00095">ITransform.hpp</link></section>
</section>
